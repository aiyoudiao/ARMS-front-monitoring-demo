{"version":3,"file":"UserOperateDrawer-B3ziPoJ8.js","sources":["../../node_modules/.pnpm/ahooks@3.8.1_react@18.3.1/node_modules/ahooks/es/useCreation/index.js","../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/throttle.js","../../packages/hooks/src/use-request/utils/cache.ts","../../packages/hooks/src/use-request/utils/cachePromise.ts","../../packages/hooks/src/use-request/utils/cacheSubscribe.ts","../../packages/hooks/src/use-request/plugins/useCachePlugin.ts","../../packages/hooks/src/use-request/plugins/useDebouncePlugin.ts","../../packages/hooks/src/use-request/plugins/useLoadingDelayPlugin.ts","../../packages/hooks/src/use-request/plugins/usePollingPlugin.ts","../../packages/hooks/src/use-request/utils/limit.ts","../../packages/hooks/src/use-request/plugins/useRefreshOnWindowFocusPlugin.ts","../../packages/hooks/src/use-request/plugins/useRetryPlugin.ts","../../packages/hooks/src/use-request/plugins/useThrottlePlugin.ts","../../packages/hooks/src/use-request/Fetch.ts","../../packages/hooks/src/use-request/useRequestImplement.ts","../../packages/hooks/src/use-request/useRequest.ts","../../src/pages/manage/user/modules/UserOperateDrawer.tsx"],"sourcesContent":["import { useRef } from 'react';\nimport depsAreSame from '../utils/depsAreSame';\nexport default function useCreation(factory, deps) {\n  var current = useRef({\n    deps: deps,\n    obj: undefined,\n    initialized: false\n  }).current;\n  if (current.initialized === false || !depsAreSame(current.deps, deps)) {\n    current.deps = deps;\n    current.obj = factory();\n    current.initialized = true;\n  }\n  return current.obj;\n}","var debounce = require('./debounce'),\n    isObject = require('./isObject');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\nmodule.exports = throttle;\n","type Timer = ReturnType<typeof setTimeout>;\ntype CachedKey = string | number;\n\nexport interface CachedData<TData = any, TParams = any> {\n  data: TData;\n  params: TParams;\n  time: number;\n}\ninterface RecordData extends CachedData {\n  timer: Timer | undefined;\n}\n\nconst cache = new Map<CachedKey, RecordData>();\n\nconst setCache = (key: CachedKey, cacheTime: number, cachedData: CachedData) => {\n  const currentCache = cache.get(key);\n  if (currentCache?.timer) {\n    clearTimeout(currentCache.timer);\n  }\n\n  let timer: Timer | undefined;\n\n  if (cacheTime > -1) {\n    // if cache out, clear it\n    timer = setTimeout(() => {\n      cache.delete(key);\n    }, cacheTime);\n  }\n\n  cache.set(key, {\n    ...cachedData,\n    timer\n  });\n};\n\nconst getCache = (key: CachedKey) => {\n  return cache.get(key);\n};\n\nconst clearCache = (key?: string | string[]) => {\n  if (key) {\n    const cacheKeys = Array.isArray(key) ? key : [key];\n    cacheKeys.forEach(cacheKey => cache.delete(cacheKey));\n  } else {\n    cache.clear();\n  }\n};\n\nexport { getCache, setCache, clearCache };\n","type CachedKey = string | number;\nconst cachePromise = new Map<CachedKey, Promise<any>>();\n\nconst getCachePromise = (cacheKey: CachedKey) => {\n  return cachePromise.get(cacheKey);\n};\n\nconst setCachePromise = (cacheKey: CachedKey, promise: Promise<any>) => {\n  // Should cache the same promise, cannot be promise.finally\n  // Because the promise.finally will change the reference of the promise\n  cachePromise.set(cacheKey, promise);\n\n  // no use promise.finally for compatibility\n  promise\n    .then(res => {\n      cachePromise.delete(cacheKey);\n      return res;\n    })\n    .catch(() => {\n      cachePromise.delete(cacheKey);\n    });\n};\n\nexport { getCachePromise, setCachePromise };\n","type Listener = (data: any) => void;\nconst listeners: Record<string, Listener[]> = {};\n\nconst trigger = (key: string, data: any) => {\n  if (listeners[key]) {\n    listeners[key].forEach(item => item(data));\n  }\n};\n\nconst subscribe = (key: string, listener: Listener) => {\n  if (!listeners[key]) {\n    listeners[key] = [];\n  }\n  listeners[key].push(listener);\n\n  return function unsubscribe() {\n    const index = listeners[key].indexOf(listener);\n    listeners[key].splice(index, 1);\n  };\n};\n\nexport { trigger, subscribe };\n","import { useRef } from 'react';\nimport { useCreation, useUnmount } from 'ahooks';\nimport type { Plugin } from '../type';\nimport { getCache, setCache } from '../utils/cache';\nimport type { CachedData } from '../utils/cache';\nimport { getCachePromise, setCachePromise } from '../utils/cachePromise';\nimport { subscribe, trigger } from '../utils/cacheSubscribe';\n\nconst useCachePlugin: Plugin<any, any[]> = (\n  fetchInstance,\n  { cacheKey, cacheTime = 5 * 60 * 1000, staleTime = 0, setCache: customSetCache, getCache: customGetCache }\n) => {\n  const unSubscribeRef = useRef<() => void>();\n\n  const currentPromiseRef = useRef<Promise<any>>();\n\n  const _setCache = (key: string, cachedData: CachedData) => {\n    if (customSetCache) {\n      customSetCache(cachedData);\n    } else {\n      setCache(key, cacheTime, cachedData);\n    }\n    trigger(key, cachedData.data);\n  };\n\n  const _getCache = (key: string, params: any[] = []) => {\n    if (customGetCache) {\n      return customGetCache(params);\n    }\n    return getCache(key);\n  };\n\n  useCreation(() => {\n    if (!cacheKey) {\n      return;\n    }\n\n    // get data from cache when init\n    const cacheData = _getCache(cacheKey);\n    if (cacheData && Object.hasOwn(cacheData, 'data')) {\n      fetchInstance.state.data = cacheData.data;\n      fetchInstance.state.params = cacheData.params;\n      if (staleTime === -1 || new Date().getTime() - cacheData.time <= staleTime) {\n        fetchInstance.state.loading = false;\n      }\n    }\n\n    // subscribe same cachekey update, trigger update\n    unSubscribeRef.current = subscribe(cacheKey, data => {\n      fetchInstance.setState({ data });\n    });\n  }, []);\n\n  useUnmount(() => {\n    unSubscribeRef.current?.();\n  });\n\n  if (!cacheKey) {\n    return {};\n  }\n\n  return {\n    onBefore: params => {\n      const cacheData = _getCache(cacheKey, params);\n\n      if (!cacheData || !Object.hasOwn(cacheData, 'data')) {\n        return {};\n      }\n\n      // If the data is fresh, stop request\n      if (staleTime === -1 || new Date().getTime() - cacheData.time <= staleTime) {\n        return {\n          loading: false,\n          data: cacheData?.data,\n          error: undefined,\n          returnNow: true\n        };\n      }\n      // If the data is stale, return data, and request continue\n      return {\n        data: cacheData?.data,\n        error: undefined\n      };\n    },\n    onRequest: (service, args) => {\n      let servicePromise = getCachePromise(cacheKey);\n\n      // If has servicePromise, and is not trigger by self, then use it\n      if (servicePromise && servicePromise !== currentPromiseRef.current) {\n        return { servicePromise };\n      }\n\n      servicePromise = service(...args);\n      currentPromiseRef.current = servicePromise;\n      setCachePromise(cacheKey, servicePromise);\n      return { servicePromise };\n    },\n    onSuccess: (data, params) => {\n      if (cacheKey) {\n        // cancel subscribe, avoid trgger self\n        unSubscribeRef.current?.();\n        _setCache(cacheKey, {\n          data,\n          params,\n          time: new Date().getTime()\n        });\n        // resubscribe\n        unSubscribeRef.current = subscribe(cacheKey, d => {\n          fetchInstance.setState({ data: d });\n        });\n      }\n    },\n    onMutate: data => {\n      if (cacheKey) {\n        // cancel subscribe, avoid trigger self\n        unSubscribeRef.current?.();\n        _setCache(cacheKey, {\n          data,\n          params: fetchInstance.state.params,\n          time: new Date().getTime()\n        });\n        // resubscribe\n        unSubscribeRef.current = subscribe(cacheKey, d => {\n          fetchInstance.setState({ data: d });\n        });\n      }\n    }\n  };\n};\n\nexport default useCachePlugin;\n","import type { DebounceSettings, DebouncedFunc } from 'lodash';\nimport debounce from 'lodash/debounce';\nimport { useEffect, useMemo, useRef } from 'react';\nimport type { Plugin } from '../type';\n\nconst useDebouncePlugin: Plugin<any, any[]> = (\n  fetchInstance,\n  { debounceWait, debounceLeading, debounceTrailing, debounceMaxWait }\n) => {\n  const debouncedRef = useRef<DebouncedFunc<any>>();\n\n  const options = useMemo(() => {\n    const ret: DebounceSettings = {};\n    if (debounceLeading !== undefined) {\n      ret.leading = debounceLeading;\n    }\n    if (debounceTrailing !== undefined) {\n      ret.trailing = debounceTrailing;\n    }\n    if (debounceMaxWait !== undefined) {\n      ret.maxWait = debounceMaxWait;\n    }\n    return ret;\n  }, [debounceLeading, debounceTrailing, debounceMaxWait]);\n\n  useEffect(() => {\n    if (debounceWait) {\n      const _originRunAsync = fetchInstance.runAsync.bind(fetchInstance);\n\n      debouncedRef.current = debounce(\n        (callback: () => void) => {\n          callback();\n        },\n        debounceWait,\n        options\n      );\n\n      // debounce runAsync should be promise\n      // https://github.com/lodash/lodash/issues/4400#issuecomment-834800398\n      fetchInstance.runAsync = (...args) => {\n        return new Promise((resolve, reject) => {\n          debouncedRef.current?.(() => {\n            _originRunAsync(...args)\n              .then(resolve)\n              .catch(reject);\n          });\n        });\n      };\n\n      return () => {\n        debouncedRef.current?.cancel();\n        fetchInstance.runAsync = _originRunAsync;\n      };\n    }\n    return () => {};\n  }, [debounceWait, options]);\n\n  if (!debounceWait) {\n    return {};\n  }\n\n  return {\n    onCancel: () => {\n      debouncedRef.current?.cancel();\n    }\n  };\n};\n\nexport default useDebouncePlugin;\n","import { useRef } from 'react';\nimport type { Plugin, Timeout } from '../type';\n\nconst useLoadingDelayPlugin: Plugin<any, any[]> = (fetchInstance, { loadingDelay, ready }) => {\n  const timerRef = useRef<Timeout>();\n\n  if (!loadingDelay) {\n    return {};\n  }\n\n  const cancelTimeout = () => {\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n    }\n  };\n\n  return {\n    onBefore: () => {\n      cancelTimeout();\n\n      // Two cases:\n      // 1. ready === undefined\n      // 2. ready === true\n      if (ready !== false) {\n        timerRef.current = setTimeout(() => {\n          fetchInstance.setState({\n            loading: true\n          });\n        }, loadingDelay);\n      }\n\n      return {\n        loading: false\n      };\n    },\n    onFinally: () => {\n      cancelTimeout();\n    },\n    onCancel: () => {\n      cancelTimeout();\n    }\n  };\n};\n\nexport default useLoadingDelayPlugin;\n","import { useRef } from 'react';\nimport { useUpdateEffect } from 'ahooks';\nimport type { Plugin, Timeout } from '../type';\nimport isDocumentVisible from '../utils/isDocumentVisible';\nimport subscribeReVisible from '../utils/subscribeReVisible';\n\nconst usePollingPlugin: Plugin<any, any[]> = (\n  fetchInstance,\n  { pollingInterval, pollingWhenHidden = true, pollingErrorRetryCount = -1 }\n) => {\n  const timerRef = useRef<Timeout>();\n  const unsubscribeRef = useRef<() => void>();\n  const countRef = useRef<number>(0);\n\n  const stopPolling = () => {\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n    }\n    unsubscribeRef.current?.();\n  };\n\n  useUpdateEffect(() => {\n    if (!pollingInterval) {\n      stopPolling();\n    }\n  }, [pollingInterval]);\n\n  if (!pollingInterval) {\n    return {};\n  }\n\n  return {\n    onBefore: () => {\n      stopPolling();\n      return null;\n    },\n    onError: () => {\n      countRef.current += 1;\n    },\n    onSuccess: () => {\n      countRef.current = 0;\n    },\n    onFinally: () => {\n      if (\n        pollingErrorRetryCount === -1 ||\n        // When an error occurs, the request is not repeated after pollingErrorRetryCount retries\n        (pollingErrorRetryCount !== -1 && countRef.current <= pollingErrorRetryCount)\n      ) {\n        timerRef.current = setTimeout(() => {\n          // if pollingWhenHidden = false && document is hidden, then stop polling and subscribe revisible\n          if (!pollingWhenHidden && !isDocumentVisible()) {\n            unsubscribeRef.current = subscribeReVisible(() => {\n              fetchInstance.refresh();\n            });\n          } else {\n            fetchInstance.refresh();\n          }\n        }, pollingInterval);\n      } else {\n        countRef.current = 0;\n      }\n    },\n    onCancel: () => {\n      stopPolling();\n    }\n  };\n};\n\nexport default usePollingPlugin;\n","export default function limit(fn: any, timespan: number) {\n  let pending = false;\n  return (...args: any[]) => {\n    if (pending) return;\n    pending = true;\n    fn(...args);\n    setTimeout(() => {\n      pending = false;\n    }, timespan);\n  };\n}\n","import { useEffect, useRef } from 'react';\nimport { useUnmount } from 'ahooks';\nimport type { Plugin } from '../type';\nimport limit from '../utils/limit';\nimport subscribeFocus from '../utils/subscribeFocus';\n\nconst useRefreshOnWindowFocusPlugin: Plugin<any, any[]> = (\n  fetchInstance,\n  { refreshOnWindowFocus, focusTimespan = 5000 }\n) => {\n  const unsubscribeRef = useRef<() => void>();\n\n  const stopSubscribe = () => {\n    unsubscribeRef.current?.();\n  };\n\n  useEffect(() => {\n    if (refreshOnWindowFocus) {\n      const limitRefresh = limit(fetchInstance.refresh.bind(fetchInstance), focusTimespan);\n      unsubscribeRef.current = subscribeFocus(() => {\n        limitRefresh();\n      });\n    }\n    return () => {\n      stopSubscribe();\n    };\n  }, [refreshOnWindowFocus, focusTimespan]);\n\n  useUnmount(() => {\n    stopSubscribe();\n  });\n\n  return {};\n};\n\nexport default useRefreshOnWindowFocusPlugin;\n","import { useRef } from 'react';\nimport type { Plugin, Timeout } from '../type';\n\nconst useRetryPlugin: Plugin<any, any[]> = (fetchInstance, { retryInterval, retryCount }) => {\n  const timerRef = useRef<Timeout>();\n  const countRef = useRef(0);\n\n  const triggerByRetry = useRef(false);\n\n  if (!retryCount) {\n    return {};\n  }\n\n  return {\n    onBefore: () => {\n      if (!triggerByRetry.current) {\n        countRef.current = 0;\n      }\n      triggerByRetry.current = false;\n\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n      }\n      return null;\n    },\n    onSuccess: () => {\n      countRef.current = 0;\n    },\n    onError: () => {\n      countRef.current += 1;\n      if (retryCount === -1 || countRef.current <= retryCount) {\n        // Exponential backoff\n        const timeout = retryInterval ?? Math.min(1000 * 2 ** countRef.current, 30000);\n        timerRef.current = setTimeout(() => {\n          triggerByRetry.current = true;\n          fetchInstance.refresh();\n        }, timeout);\n      } else {\n        countRef.current = 0;\n      }\n    },\n    onCancel: () => {\n      countRef.current = 0;\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n      }\n    }\n  };\n};\n\nexport default useRetryPlugin;\n","import type { DebouncedFunc, ThrottleSettings } from 'lodash';\nimport throttle from 'lodash/throttle';\nimport { useEffect, useRef } from 'react';\nimport type { Plugin } from '../type';\n\nconst useThrottlePlugin: Plugin<any, any[]> = (fetchInstance, { throttleWait, throttleLeading, throttleTrailing }) => {\n  const throttledRef = useRef<DebouncedFunc<any>>();\n\n  const options: ThrottleSettings = {};\n  if (throttleLeading !== undefined) {\n    options.leading = throttleLeading;\n  }\n  if (throttleTrailing !== undefined) {\n    options.trailing = throttleTrailing;\n  }\n\n  useEffect(() => {\n    if (throttleWait) {\n      const _originRunAsync = fetchInstance.runAsync.bind(fetchInstance);\n\n      throttledRef.current = throttle(\n        callback => {\n          callback();\n        },\n        throttleWait,\n        options\n      );\n\n      // throttle runAsync should be promise\n      // https://github.com/lodash/lodash/issues/4400#issuecomment-834800398\n      fetchInstance.runAsync = (...args) => {\n        return new Promise((resolve, reject) => {\n          throttledRef.current?.(() => {\n            _originRunAsync(...args)\n              .then(resolve)\n              .catch(reject);\n          });\n        });\n      };\n\n      return () => {\n        fetchInstance.runAsync = _originRunAsync;\n        throttledRef.current?.cancel();\n      };\n    }\n    return () => {};\n  }, [throttleWait, throttleLeading, throttleTrailing]);\n\n  if (!throttleWait) {\n    return {};\n  }\n\n  return {\n    onCancel: () => {\n      throttledRef.current?.cancel();\n    }\n  };\n};\n\nexport default useThrottlePlugin;\n","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\n\nimport type { FlatResponseData } from '@sa/axios';\nimport type { AxiosError } from 'axios';\nimport type { MutableRefObject } from 'react';\nimport { isFunction } from './utils';\nimport type { FetchState, Options, PluginReturn, Service, Subscribe } from './type';\n\nexport default class Fetch<TData extends FlatResponseData, TParams extends any[]> {\n  pluginImpls: PluginReturn<TData, TParams>[];\n\n  count: number = 0;\n\n  state: FetchState<TData, TParams> = {\n    loading: false,\n    params: undefined,\n    response: null,\n    data: undefined,\n    error: null\n  };\n\n  // eslint-disable-next-line max-params\n  constructor(\n    public serviceRef: MutableRefObject<Service<TData, TParams>>,\n    public options: Options<TData, TParams>,\n    public subscribe: Subscribe,\n    public initState: Partial<FetchState<TData, TParams>> = {}\n  ) {\n    this.state = {\n      ...this.state,\n      loading: !options.manual,\n      ...initState\n    };\n  }\n\n  setState(s: Partial<FetchState<TData, TParams>> = {}) {\n    this.state = {\n      ...this.state,\n      ...s\n    };\n    this.subscribe();\n  }\n\n  runPluginHandler(event: keyof PluginReturn<TData, TParams>, ...rest: any[]) {\n    const r = this.pluginImpls.map(i => i[event]?.(...rest)).filter(Boolean);\n    return Object.assign({}, ...r);\n  }\n\n  async runAsync(...params: TParams): Promise<TData> {\n    this.count += 1;\n    const currentCount = this.count;\n\n    const { stopNow = false, returnNow = false, ...state } = this.runPluginHandler('onBefore', params);\n\n    // stop request\n    if (stopNow) {\n      return new Promise(() => {});\n    }\n\n    this.setState({\n      loading: true,\n      params,\n      ...state\n    });\n\n    // return now\n    if (returnNow) {\n      return Promise.resolve(state.data);\n    }\n\n    this.options.onBefore?.(params);\n\n    try {\n      // replace service\n      let { servicePromise } = this.runPluginHandler('onRequest', this.serviceRef.current, params);\n\n      if (!servicePromise) {\n        servicePromise = this.serviceRef.current(...params);\n      }\n\n      const res = await servicePromise;\n\n      if (currentCount !== this.count) {\n        // prevent run.then when request is canceled\n        return new Promise(() => {});\n      }\n\n      // const formattedResult = this.options.formatResultRef.current ? this.options.formatResultRef.current(res) : res;\n\n      this.setState({\n        data: res.data,\n        error: null,\n        response: res.response,\n        loading: false\n      });\n\n      this.options.onSuccess?.(res.data, params);\n      this.runPluginHandler('onSuccess', res, params);\n\n      this.options.onFinally?.(params, res.data, null);\n\n      if (currentCount === this.count) {\n        this.runPluginHandler('onFinally', params, res, null);\n      }\n\n      return res;\n    } catch (error) {\n      const errorMessage = error as AxiosError;\n      if (currentCount !== this.count) {\n        // prevent run.then when request is canceled\n        return new Promise(() => {});\n      }\n\n      this.setState({\n        error: errorMessage,\n        data: null,\n        response: error.response,\n        loading: false\n      });\n\n      this.options.onError?.(errorMessage, params);\n      this.runPluginHandler('onError', error, params);\n\n      this.options.onFinally?.(params, undefined, errorMessage);\n\n      if (currentCount === this.count) {\n        this.runPluginHandler('onFinally', params, undefined, error);\n      }\n\n      throw error;\n    }\n  }\n\n  run(...params: TParams) {\n    this.runAsync(...params).catch(error => {\n      if (!this.options.onError) {\n        console.error(error);\n      }\n    });\n  }\n\n  cancel() {\n    this.count += 1;\n    this.setState({\n      loading: false\n    });\n\n    this.runPluginHandler('onCancel');\n  }\n\n  refresh() {\n    this.run(...(this.state.params || []));\n  }\n\n  refreshAsync() {\n    return this.runAsync(...(this.state.params || []));\n  }\n\n  mutate(data?: TData | ((oldData: TData | null) => TData | null)) {\n    const targetData = isFunction(data) ? data(this.state.data) : data;\n    this.runPluginHandler('onMutate', targetData);\n    this.setState({\n      data: targetData\n    });\n  }\n}\n","import { useCreation, useLatest, useMemoizedFn, useMount, useUnmount, useUpdate } from 'ahooks';\nimport type { FlatResponseData } from '@sa/axios';\nimport { isDev } from './utils';\nimport Fetch from './Fetch';\nimport type { Options, Plugin, Result, Service } from './type';\n\nfunction useRequestImplement<\n  TData extends FlatResponseData<T, ResponseData>,\n  TParams extends any[],\n  T = any,\n  ResponseData = any\n>(\n  service: Service<TData, TParams>,\n  options: Options<TData, TParams> = {},\n  plugins: Plugin<TData, TParams>[] = []\n): Result<TData, TParams> {\n  const { manual = false, ready = true, ...rest } = options;\n\n  if (isDev) {\n    if (options.defaultParams && !Array.isArray(options.defaultParams)) {\n      console.warn(`expected defaultParams is array, got ${typeof options.defaultParams}`);\n    }\n  }\n\n  const fetchOptions = {\n    manual,\n    ready,\n    ...rest\n  };\n\n  const serviceRef = useLatest(service);\n\n  const update = useUpdate();\n\n  const fetchInstance = useCreation(() => {\n    const initState = plugins.map(p => p?.onInit?.(fetchOptions)).filter(Boolean);\n\n    return new Fetch<TData, TParams>(serviceRef, fetchOptions, update, Object.assign({}, ...initState));\n  }, []);\n  fetchInstance.options = fetchOptions;\n  // run all plugins hooks\n  fetchInstance.pluginImpls = plugins.map(p => p(fetchInstance, fetchOptions));\n\n  useMount(() => {\n    if (!manual && ready) {\n      // useCachePlugin can set fetchInstance.state.params from cache when init\n      const params = fetchInstance.state.params || options.defaultParams || [];\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-expect-error\n      fetchInstance.run(...params);\n    }\n  });\n\n  useUnmount(() => {\n    fetchInstance.cancel();\n  });\n\n  return {\n    loading: fetchInstance.state.loading,\n    data: fetchInstance.state.data,\n    error: fetchInstance.state.error,\n    params: fetchInstance.state.params || [],\n    cancel: useMemoizedFn(fetchInstance.cancel.bind(fetchInstance)),\n    refresh: useMemoizedFn(fetchInstance.refresh.bind(fetchInstance)),\n    refreshAsync: useMemoizedFn(fetchInstance.refreshAsync.bind(fetchInstance)),\n    run: useMemoizedFn(fetchInstance.run.bind(fetchInstance)),\n    runAsync: useMemoizedFn(fetchInstance.runAsync.bind(fetchInstance)),\n    mutate: useMemoizedFn(fetchInstance.mutate.bind(fetchInstance))\n  } as Result<TData, TParams>;\n}\n\nexport default useRequestImplement;\n","import type { FlatResponseData } from '@sa/axios';\nimport useAutoRunPlugin from './plugins/useAutoRunPlugin';\nimport useCachePlugin from './plugins/useCachePlugin';\nimport useDebouncePlugin from './plugins/useDebouncePlugin';\nimport useLoadingDelayPlugin from './plugins/useLoadingDelayPlugin';\nimport usePollingPlugin from './plugins/usePollingPlugin';\nimport useRefreshOnWindowFocusPlugin from './plugins/useRefreshOnWindowFocusPlugin';\nimport useRetryPlugin from './plugins/useRetryPlugin';\nimport useThrottlePlugin from './plugins/useThrottlePlugin';\nimport type { Options, Plugin, Service } from './type';\nimport useRequestImplement from './useRequestImplement';\n\nfunction useRequest<TData extends FlatResponseData, TParams extends any[]>(\n  service: Service<TData, TParams>,\n  options?: Options<TData, TParams>,\n  plugins?: Plugin<TData, TParams>[]\n) {\n  return useRequestImplement<TData, TParams>(service, options, [\n    ...(plugins || []),\n    useDebouncePlugin,\n    useLoadingDelayPlugin,\n    usePollingPlugin,\n    useRefreshOnWindowFocusPlugin,\n    useThrottlePlugin,\n    useAutoRunPlugin,\n    useCachePlugin,\n    useRetryPlugin\n  ] as Plugin<TData, TParams>[]);\n}\n\nexport default useRequest;\n","import { Button, Drawer, Flex, Form, Input, Radio, Select } from 'antd';\nimport type { FC } from 'react';\nimport { useRequest } from '@sa/hooks';\nimport { enableStatusOptions, userGenderOptions } from '@/constants/business';\nimport { fetchGetAllRoles } from '@/service/api';\n\ninterface Props {\n  open: boolean;\n  /** the type of operation */\n  operateType: AntDesign.TableOperateType;\n  closeDrawer: () => void;\n  submitted: () => void;\n  /** the edit row data */\n  rowData?: Api.SystemManage.User;\n}\n\ntype Model = Pick<\n  Api.SystemManage.User,\n  'userName' | 'userGender' | 'nickName' | 'userPhone' | 'userEmail' | 'userRoles' | 'status'\n>;\n\ninterface OptionsProps {\n  label: string;\n  value: string;\n}\n\nfunction getOptions(item: Api.SystemManage.AllRole) {\n  return {\n    label: item.roleName,\n    value: item.roleCode\n  };\n}\n\nconst UserOperateDrawer: FC<Props> = ({ open, closeDrawer, submitted, operateType, rowData }) => {\n  const { t } = useTranslation();\n\n  const [form] = Form.useForm<Model>();\n\n  const { data, run } = useRequest(fetchGetAllRoles, {\n    manual: true\n  });\n\n  const roleOptions: OptionsProps[] = data ? data.map(getOptions) : [];\n\n  const onClose = () => {\n    closeDrawer();\n    form.resetFields();\n  };\n\n  async function handleSubmit() {\n    const res = await form.validateFields();\n    console.log(res);\n\n    // request\n    window.$message?.success(t('common.updateSuccess'));\n    closeDrawer();\n    submitted();\n  }\n\n  useUpdateEffect(() => {\n    if (open) {\n      run();\n    }\n  }, [open]);\n\n  return (\n    <Drawer\n      onClose={onClose}\n      title={operateType === 'add' ? t('page.manage.user.addUser') : t('page.manage.user.editUser')}\n      open={open}\n      footer={\n        <Flex justify=\"space-between\">\n          <Button onClick={onClose}>{t('common.cancel')}</Button>\n          <Button\n            onClick={handleSubmit}\n            type=\"primary\"\n          >\n            {t('common.confirm')}\n          </Button>\n        </Flex>\n      }\n    >\n      <Form\n        form={form}\n        initialValues={operateType === 'edit' ? rowData : undefined}\n        layout=\"vertical\"\n      >\n        <Form.Item\n          label={t('page.manage.user.userName')}\n          name=\"userName\"\n        >\n          <Input placeholder={t('page.manage.user.form.userName')} />\n        </Form.Item>\n\n        <Form.Item\n          label={t('page.manage.user.userGender')}\n          name=\"userGender\"\n        >\n          <Radio.Group>\n            {userGenderOptions.map(item => (\n              <Radio\n                value={item.value}\n                key={item.value}\n              >\n                {t(item.label)}\n              </Radio>\n            ))}\n          </Radio.Group>\n        </Form.Item>\n\n        <Form.Item\n          label={t('page.manage.user.nickName')}\n          name=\"nickName\"\n        >\n          <Input placeholder={t('page.manage.user.form.nickName')} />\n        </Form.Item>\n\n        <Form.Item\n          label={t('page.manage.user.userPhone')}\n          name=\"userPhone\"\n        >\n          <Input placeholder={t('page.manage.user.form.userPhone')} />\n        </Form.Item>\n\n        <Form.Item\n          label={t('page.manage.user.userEmail')}\n          name=\"email\"\n        >\n          <Input placeholder={t('page.manage.user.form.userEmail')} />\n        </Form.Item>\n\n        <Form.Item\n          label={t('page.manage.user.userStatus')}\n          name=\"status\"\n        >\n          <Radio.Group>\n            {enableStatusOptions.map(item => (\n              <Radio\n                value={item.value}\n                key={item.value}\n              >\n                {t(item.label)}\n              </Radio>\n            ))}\n          </Radio.Group>\n        </Form.Item>\n\n        <Form.Item\n          label={t('page.manage.user.userRole')}\n          name=\"roles\"\n        >\n          <Select\n            options={roleOptions}\n            placeholder={t('page.manage.user.form.userRole')}\n          />\n        </Form.Item>\n      </Form>\n    </Drawer>\n  );\n};\n\nexport default UserOperateDrawer;\n"],"names":["useCreation","factory","deps","current","useRef","depsAreSame","debounce","require$$0","isObject","require$$1","FUNC_ERROR_TEXT","throttle","func","wait","options","leading","trailing","throttle_1","cache","setCache","key","cacheTime","cachedData","currentCache","timer","getCache","cachePromise","getCachePromise","cacheKey","setCachePromise","promise","res","listeners","trigger","data","item","subscribe","listener","index","useCachePlugin","fetchInstance","staleTime","customSetCache","customGetCache","unSubscribeRef","currentPromiseRef","_setCache","_getCache","params","cacheData","useUnmount","_a","service","args","servicePromise","d","useDebouncePlugin","debounceWait","debounceLeading","debounceTrailing","debounceMaxWait","debouncedRef","useMemo","ret","useEffect","_originRunAsync","callback","resolve","reject","useLoadingDelayPlugin","loadingDelay","ready","timerRef","cancelTimeout","usePollingPlugin","pollingInterval","pollingWhenHidden","pollingErrorRetryCount","unsubscribeRef","countRef","stopPolling","useUpdateEffect","isDocumentVisible","subscribeReVisible","limit","fn","timespan","pending","useRefreshOnWindowFocusPlugin","refreshOnWindowFocus","focusTimespan","stopSubscribe","limitRefresh","subscribeFocus","useRetryPlugin","retryInterval","retryCount","triggerByRetry","timeout","useThrottlePlugin","throttleWait","throttleLeading","throttleTrailing","throttledRef","Fetch","serviceRef","initState","__publicField","s","event","rest","r","currentCount","stopNow","returnNow","state","_b","_d","_c","_f","_e","error","errorMessage","_h","_g","_j","_i","targetData","isFunction","useRequestImplement","plugins","manual","fetchOptions","useLatest","update","useUpdate","p","useMount","useMemoizedFn","useRequest","useAutoRunPlugin","getOptions","UserOperateDrawer","open","closeDrawer","submitted","operateType","rowData","t","useTranslation","form","Form","run","fetchGetAllRoles","roleOptions","onClose","handleSubmit","jsx","Drawer","jsxs","Flex","Button","Input","Radio","userGenderOptions","enableStatusOptions","Select"],"mappings":"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","x_google_ignoreList":[0,1]}