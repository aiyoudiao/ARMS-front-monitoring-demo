{"version":3,"file":"index-Ce55Vn25.js","sources":["../../node_modules/.pnpm/ahooks@3.8.1_react@18.3.1/node_modules/ahooks/es/useMemoizedFn/index.js","../../node_modules/.pnpm/ahooks@3.8.1_react@18.3.1/node_modules/ahooks/es/useUpdate/index.js"],"sourcesContent":["import { useMemo, useRef } from 'react';\nimport { isFunction } from '../utils';\nimport isDev from '../utils/isDev';\nfunction useMemoizedFn(fn) {\n  if (isDev) {\n    if (!isFunction(fn)) {\n      console.error(\"useMemoizedFn expected parameter is a function, got \".concat(typeof fn));\n    }\n  }\n  var fnRef = useRef(fn);\n  // why not write `fnRef.current = fn`?\n  // https://github.com/alibaba/hooks/issues/728\n  fnRef.current = useMemo(function () {\n    return fn;\n  }, [fn]);\n  var memoizedFn = useRef();\n  if (!memoizedFn.current) {\n    memoizedFn.current = function () {\n      var args = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n      return fnRef.current.apply(this, args);\n    };\n  }\n  return memoizedFn.current;\n}\nexport default useMemoizedFn;","import { __read } from \"tslib\";\nimport { useCallback, useState } from 'react';\nvar useUpdate = function () {\n  var _a = __read(useState({}), 2),\n    setState = _a[1];\n  return useCallback(function () {\n    return setState({});\n  }, []);\n};\nexport default useUpdate;"],"names":["useMemoizedFn","fn","fnRef","useRef","useMemo","memoizedFn","args","_i","useUpdate","_a","__read","useState","setState","useCallback"],"mappings":"oFAGA,SAASA,EAAcC,EAAI,CAMzB,IAAIC,EAAQC,SAAOF,CAAE,EAGrBC,EAAM,QAAUE,EAAAA,QAAQ,UAAY,CAClC,OAAOH,CACX,EAAK,CAACA,CAAE,CAAC,EACP,IAAII,EAAaF,EAAAA,SACjB,OAAKE,EAAW,UACdA,EAAW,QAAU,UAAY,CAE/B,QADIC,EAAO,CAAA,EACFC,EAAK,EAAGA,EAAK,UAAU,OAAQA,IACtCD,EAAKC,CAAE,EAAI,UAAUA,CAAE,EAEzB,OAAOL,EAAM,QAAQ,MAAM,KAAMI,CAAI,CAC3C,GAESD,EAAW,OACpB,CCxBG,IAACG,EAAY,UAAY,CAC1B,IAAIC,EAAKC,EAAOC,EAAQ,SAAC,CAAE,CAAA,EAAG,CAAC,EAC7BC,EAAWH,EAAG,CAAC,EACjB,OAAOI,EAAW,YAAC,UAAY,CAC7B,OAAOD,EAAS,CAAA,CAAE,CACnB,EAAE,CAAE,CAAA,CACP","x_google_ignoreList":[0,1]}