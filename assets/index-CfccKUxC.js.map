{"version":3,"file":"index-CfccKUxC.js","sources":["../../node_modules/.pnpm/typeit@8.8.5/node_modules/typeit/dist/index.es.js","../../src/pages/about/index.tsx"],"sourcesContent":["// TypeIt by Alex MacArthur - https://typeitjs.com\nconst isArray = (thing) => Array.isArray(thing);\n\nconst asArray = (value) => isArray(value) ? value : [value];\n\nlet Queue = function(initialItems) {\n  let add = function(steps) {\n    asArray(steps).forEach((step) => {\n      return _q.set(Symbol(step.char?.innerText), buildQueueItem({ ...step }));\n    });\n    return this;\n  };\n  let getTypeable = () => rawValues().filter((value) => value.typeable);\n  let set = function(index, item) {\n    let keys = [..._q.keys()];\n    _q.set(keys[index], buildQueueItem(item));\n  };\n  let buildQueueItem = (queueItem) => {\n    queueItem.shouldPauseCursor = function() {\n      return Boolean(this.typeable || this.cursorable || this.deletable);\n    };\n    return queueItem;\n  };\n  let reset = function() {\n    _q.forEach((item) => delete item.done);\n  };\n  let wipe = function() {\n    _q = /* @__PURE__ */ new Map();\n    add(initialItems);\n  };\n  let getQueue = () => _q;\n  let rawValues = () => Array.from(_q.values());\n  let destroy = (key) => _q.delete(key);\n  let getItems = (all = false) => all ? rawValues() : rawValues().filter((i) => !i.done);\n  let done = (key, shouldDestroy = false) => shouldDestroy ? _q.delete(key) : _q.get(key).done = true;\n  let _q = /* @__PURE__ */ new Map();\n  add(initialItems);\n  return {\n    add,\n    set,\n    wipe,\n    done,\n    reset,\n    destroy,\n    getItems,\n    getQueue,\n    getTypeable\n  };\n};\n\nconst DATA_ATTRIBUTE = \"data-typeit-id\";\nconst CURSOR_CLASS = \"ti-cursor\";\nconst END = \"END\";\nconst DEFAULT_STATUSES = {\n  started: false,\n  completed: false,\n  frozen: false,\n  destroyed: false\n};\nconst DEFAULT_OPTIONS = {\n  breakLines: true,\n  cursor: {\n    autoPause: true,\n    autoPauseDelay: 500,\n    animation: {\n      frames: [0, 0, 1].map((n) => {\n        return { opacity: n };\n      }),\n      options: {\n        iterations: Infinity,\n        easing: \"steps(2, start)\",\n        fill: \"forwards\"\n      }\n    }\n  },\n  cursorChar: \"|\",\n  cursorSpeed: 1e3,\n  deleteSpeed: null,\n  html: true,\n  lifeLike: true,\n  loop: false,\n  loopDelay: 750,\n  nextStringDelay: 750,\n  speed: 100,\n  startDelay: 250,\n  startDelete: false,\n  strings: [],\n  waitUntilVisible: false,\n  beforeString: () => {\n  },\n  afterString: () => {\n  },\n  beforeStep: () => {\n  },\n  afterStep: () => {\n  },\n  afterComplete: () => {\n  }\n};\nconst PLACEHOLDER_CSS = `[${DATA_ATTRIBUTE}]:before {content: '.'; display: inline-block; width: 0; visibility: hidden;}`;\n\nconst createElement = (el) => document.createElement(el);\n\nconst createTextNode = (content) => document.createTextNode(content);\n\nconst appendStyleBlock = (styles, id = \"\") => {\n  let styleBlock = createElement(\"style\");\n  styleBlock.id = id;\n  styleBlock.appendChild(createTextNode(styles));\n  document.head.appendChild(styleBlock);\n};\n\nconst calculateDelay = (delayArg) => {\n  if (!isArray(delayArg)) {\n    delayArg = [delayArg / 2, delayArg / 2];\n  }\n  return delayArg;\n};\n\nconst randomInRange = (value, range) => {\n  return Math.abs(\n    Math.random() * (value + range - (value - range)) + (value - range)\n  );\n};\n\nlet range = (val) => val / 2;\nfunction calculatePace(options) {\n  let { speed, deleteSpeed, lifeLike } = options;\n  deleteSpeed = deleteSpeed !== null ? deleteSpeed : speed / 3;\n  return lifeLike ? [\n    randomInRange(speed, range(speed)),\n    randomInRange(deleteSpeed, range(deleteSpeed))\n  ] : [speed, deleteSpeed];\n}\n\nconst toArray = (val) => Array.from(val);\n\nlet expandTextNodes = (element) => {\n  [...element.childNodes].forEach((child) => {\n    if (child.nodeValue) {\n      [...child.nodeValue].forEach((c) => {\n        child.parentNode.insertBefore(createTextNode(c), child);\n      });\n      child.remove();\n      return;\n    }\n    expandTextNodes(child);\n  });\n  return element;\n};\n\nconst getParsedBody = (content) => {\n  let doc = document.implementation.createHTMLDocument();\n  doc.body.innerHTML = content;\n  return expandTextNodes(doc.body);\n};\n\nfunction walkElementNodes(element, shouldReverse = false, shouldIncludeCursor = false) {\n  let cursor = element.querySelector(`.${CURSOR_CLASS}`);\n  let walker = document.createTreeWalker(element, NodeFilter.SHOW_ALL, {\n    acceptNode: (node) => {\n      if (cursor && shouldIncludeCursor) {\n        if (node.classList?.contains(CURSOR_CLASS)) {\n          return NodeFilter.FILTER_ACCEPT;\n        }\n        if (cursor.contains(node)) {\n          return NodeFilter.FILTER_REJECT;\n        }\n      }\n      return node.classList?.contains(CURSOR_CLASS) ? NodeFilter.FILTER_REJECT : NodeFilter.FILTER_ACCEPT;\n    }\n  });\n  let nextNode;\n  let nodes = [];\n  while (nextNode = walker.nextNode()) {\n    if (!nextNode.originalParent) {\n      nextNode.originalParent = nextNode.parentNode;\n    }\n    nodes.push(nextNode);\n  }\n  return shouldReverse ? nodes.reverse() : nodes;\n}\nfunction chunkStringAsHtml(string) {\n  return walkElementNodes(getParsedBody(string));\n}\nfunction maybeChunkStringAsHtml(str, asHtml = true) {\n  return asHtml ? chunkStringAsHtml(str) : toArray(str).map(createTextNode);\n}\n\nconst cleanUpSkipped = ({\n  index,\n  newIndex,\n  queueItems,\n  cleanUp\n}) => {\n  for (let i = index + 1; i < newIndex + 1; i++) {\n    cleanUp(queueItems[i][0]);\n  }\n};\n\nconst isNumber = (value) => Number.isInteger(value);\n\nconst countStepsToSelector = ({\n  queueItems,\n  selector,\n  cursorPosition,\n  to\n}) => {\n  if (isNumber(selector)) {\n    return selector * -1;\n  }\n  let isMovingToEnd = new RegExp(END, \"i\").test(to);\n  let selectorIndex = selector ? [...queueItems].reverse().findIndex(({ char }) => {\n    let parentElement = char.parentElement;\n    let parentMatches = parentElement.matches(selector);\n    if (isMovingToEnd && parentMatches) {\n      return true;\n    }\n    return parentMatches && parentElement.firstChild.isSameNode(char);\n  }) : -1;\n  if (selectorIndex < 0) {\n    selectorIndex = isMovingToEnd ? 0 : queueItems.length - 1;\n  }\n  let offset = isMovingToEnd ? 0 : 1;\n  return selectorIndex - cursorPosition + offset;\n};\n\nconst destroyTimeouts = (timeouts) => {\n  timeouts.forEach(clearTimeout);\n  return [];\n};\n\nconst duplicate = (value, times) => new Array(times).fill(value);\n\nlet beforePaint = (cb) => {\n  return new Promise((resolve) => {\n    requestAnimationFrame(async () => {\n      resolve(await cb());\n    });\n  });\n};\n\nlet getAnimationFromElement = (element) => {\n  return element?.getAnimations().find((animation) => {\n    return animation.id === element.dataset.tiAnimationId;\n  });\n};\n\nlet setCursorAnimation = ({\n  cursor,\n  frames,\n  options\n}) => {\n  let animation = cursor.animate(frames, options);\n  animation.pause();\n  animation.id = cursor.dataset.tiAnimationId;\n  beforePaint(() => {\n    beforePaint(() => {\n      animation.play();\n    });\n  });\n  return animation;\n};\n\nlet rebuildCursorAnimation = ({\n  cursor,\n  options,\n  cursorOptions\n}) => {\n  if (!cursor || !cursorOptions) return;\n  let animation = getAnimationFromElement(cursor);\n  let oldCurrentTime;\n  if (animation) {\n    options.delay = animation.effect.getComputedTiming().delay;\n    oldCurrentTime = animation.currentTime;\n    animation.cancel();\n  }\n  let newAnimation = setCursorAnimation({\n    cursor,\n    frames: cursorOptions.animation.frames,\n    options\n  });\n  if (oldCurrentTime) {\n    newAnimation.currentTime = oldCurrentTime;\n  }\n  return newAnimation;\n};\n\nlet execute = (queueItem) => queueItem.func?.call(null);\nlet fireItem = async ({\n  index,\n  queueItems,\n  wait,\n  cursor,\n  cursorOptions\n}) => {\n  let queueItem = queueItems[index][1];\n  let instantQueue = [];\n  let tempIndex = index;\n  let futureItem = queueItem;\n  let shouldBeGrouped = () => futureItem && !futureItem.delay;\n  let shouldPauseCursor = queueItem.shouldPauseCursor() && cursorOptions.autoPause;\n  while (shouldBeGrouped()) {\n    instantQueue.push(futureItem);\n    shouldBeGrouped() && tempIndex++;\n    futureItem = queueItems[tempIndex] ? queueItems[tempIndex][1] : null;\n  }\n  if (instantQueue.length) {\n    await beforePaint(async () => {\n      for (let q of instantQueue) {\n        await execute(q);\n      }\n    });\n    return tempIndex - 1;\n  }\n  let animation = getAnimationFromElement(cursor);\n  let options;\n  if (animation) {\n    options = {\n      ...animation.effect.getComputedTiming(),\n      delay: shouldPauseCursor ? cursorOptions.autoPauseDelay : 0\n    };\n  }\n  await wait(async () => {\n    if (animation && shouldPauseCursor) {\n      animation.cancel();\n    }\n    await beforePaint(() => {\n      execute(queueItem);\n    });\n  }, queueItem.delay);\n  await rebuildCursorAnimation({\n    cursor,\n    options,\n    cursorOptions\n  });\n  return index;\n};\n\nconst fireWhenVisible = (element, func) => {\n  let observer = new IntersectionObserver(\n    (entries, observer2) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          func();\n          observer2.unobserve(element);\n        }\n      });\n    },\n    { threshold: 1 }\n  );\n  observer.observe(element);\n};\n\nconst generateHash = () => Math.random().toString().substring(2, 9);\n\nconst isInput = (el) => {\n  return \"value\" in el;\n};\n\nlet getAllChars = (element) => {\n  if (isInput(element)) {\n    return toArray(element.value);\n  }\n  return walkElementNodes(element, true).filter(\n    (c) => !(c.childNodes.length > 0)\n  );\n};\n\nlet handleFunctionalArg = (arg) => {\n  return typeof arg === \"function\" ? arg() : arg;\n};\n\nlet select = (selector, element = document, all = false) => {\n  return element[`querySelector${all ? \"All\" : \"\"}`](selector);\n};\n\nlet isBodyElement = (node) => /body/i.test(node?.tagName);\n\nlet insertIntoElement = (originalTarget, character) => {\n  if (isInput(originalTarget)) {\n    originalTarget.value = `${originalTarget.value}${character.textContent}`;\n    return;\n  }\n  character.innerHTML = \"\";\n  let target = isBodyElement(character.originalParent) ? originalTarget : (\n    // If we add one-off fresh elements, there will be no\n    // \"originalParent\", so always fall back to the default target.\n    character.originalParent || originalTarget\n  );\n  target.insertBefore(\n    character,\n    select(\".\" + CURSOR_CLASS, target) || null\n  );\n};\n\nconst isNonVoidElement = (el) => /<(.+)>(.*?)<\\/(.+)>/.test(el.outerHTML);\n\nconst merge = (originalObj, newObj) => Object.assign({}, originalObj, newObj);\n\nlet processCursorOptions = (cursorOptions) => {\n  if (typeof cursorOptions === \"object\") {\n    let newOptions = {};\n    let { frames: defaultFrames, options: defaultOptions } = DEFAULT_OPTIONS.cursor.animation;\n    newOptions.animation = cursorOptions.animation || {};\n    newOptions.animation.frames = cursorOptions.animation?.frames || defaultFrames;\n    newOptions.animation.options = merge(\n      defaultOptions,\n      cursorOptions.animation?.options || {}\n    );\n    newOptions.autoPause = cursorOptions.autoPause ?? DEFAULT_OPTIONS.cursor.autoPause;\n    newOptions.autoPauseDelay = cursorOptions.autoPauseDelay || DEFAULT_OPTIONS.cursor.autoPauseDelay;\n    return newOptions;\n  }\n  if (cursorOptions === true) {\n    return DEFAULT_OPTIONS.cursor;\n  }\n  return cursorOptions;\n};\n\nconst removeNode = (node, rootElement) => {\n  if (!node) return;\n  let nodeParent = node.parentNode;\n  let nodeToRemove = nodeParent.childNodes.length > 1 || nodeParent.isSameNode(rootElement) ? (\n    // This parent still needs to exist.\n    node\n  ) : (\n    // There's nothing else in there, so just delete the entire thing.\n    // By doing this, we clean up markup as we go along.\n    nodeParent\n  );\n  nodeToRemove.remove();\n};\n\nconst repositionCursor = (element, allChars, newCursorPosition) => {\n  let nodeToInsertBefore = allChars[newCursorPosition - 1];\n  let cursor = select(`.${CURSOR_CLASS}`, element);\n  element = nodeToInsertBefore?.parentNode || element;\n  element.insertBefore(cursor, nodeToInsertBefore || null);\n};\n\nfunction selectorToElement(thing) {\n  return typeof thing === \"string\" ? select(thing) : thing;\n}\n\nlet cursorFontStyles = {\n  \"font-family\": \"\",\n  \"font-weight\": \"\",\n  \"font-size\": \"\",\n  \"font-style\": \"\",\n  \"line-height\": \"\",\n  color: \"\",\n  transform: \"translateX(-.125em)\"\n};\nlet setCursorStyles = (id, element) => {\n  let rootSelector = `[${DATA_ATTRIBUTE}='${id}']`;\n  let cursorSelector = `${rootSelector} .${CURSOR_CLASS}`;\n  let computedStyles = getComputedStyle(element);\n  let customProperties = Object.entries(cursorFontStyles).reduce(\n    (accumulator, [item, value]) => {\n      return `${accumulator} ${item}: var(--ti-cursor-${item}, ${value || computedStyles[item]});`;\n    },\n    \"\"\n  );\n  appendStyleBlock(\n    `${cursorSelector} { display: inline-block; width: 0; ${customProperties} }`,\n    id\n  );\n};\n\nfunction splitOnBreak(str) {\n  return str.replace(/<!--(.+?)-->/g, \"\").trim().split(/<br(?:\\s*?)(?:\\/)?>/);\n}\n\nlet updateCursorPosition = (steps, cursorPosition, printedCharacters) => {\n  return Math.min(\n    Math.max(cursorPosition + steps, 0),\n    printedCharacters.length\n  );\n};\n\nlet wait = (callback, delay, timeouts) => {\n  return new Promise((resolve) => {\n    let cb = async () => {\n      await callback();\n      resolve();\n    };\n    timeouts.push(setTimeout(cb, delay || 0));\n  });\n};\n\nclass TypeIt {\n  element;\n  timeouts;\n  cursorPosition;\n  predictedCursorPosition;\n  statuses = {\n    started: false,\n    completed: false,\n    frozen: false,\n    destroyed: false\n  };\n  opts;\n  id;\n  queue;\n  cursor;\n  unfreeze = () => {\n  };\n  constructor(element, options = {}) {\n    this.opts = merge(DEFAULT_OPTIONS, options);\n    this.element = selectorToElement(element);\n    this.timeouts = [];\n    this.cursorPosition = 0;\n    this.unfreeze = () => {\n    };\n    this.predictedCursorPosition = null;\n    this.statuses = merge({}, DEFAULT_STATUSES);\n    this.id = generateHash();\n    this.queue = Queue([{ delay: this.opts.startDelay }]);\n    this.#buildOptions(options);\n    this.cursor = this.#setUpCursor();\n    this.element.dataset.typeitId = this.id;\n    appendStyleBlock(PLACEHOLDER_CSS);\n    if (this.opts.strings.length) {\n      this.#generateQueue();\n    }\n  }\n  /**\n   * Can only be called once.\n   */\n  go() {\n    if (this.statuses.started) {\n      return this;\n    }\n    this.#attachCursor();\n    if (!this.opts.waitUntilVisible) {\n      this.#fire();\n      return this;\n    }\n    fireWhenVisible(this.element, this.#fire.bind(this));\n    return this;\n  }\n  destroy(shouldRemoveCursor = true) {\n    this.timeouts = destroyTimeouts(this.timeouts);\n    handleFunctionalArg(shouldRemoveCursor) && this.cursor && this.#removeNode(this.cursor);\n    this.statuses.destroyed = true;\n  }\n  reset(rebuild) {\n    !this.is(\"destroyed\") && this.destroy();\n    if (rebuild) {\n      this.queue.wipe();\n      rebuild(this);\n    } else {\n      this.queue.reset();\n    }\n    this.cursorPosition = 0;\n    for (let property in this.statuses) {\n      this.statuses[property] = false;\n    }\n    this.element[this.#elementIsInput() ? \"value\" : \"innerHTML\"] = \"\";\n    return this;\n  }\n  is = function(key) {\n    return this.statuses[key];\n  };\n  type(string, actionOpts = {}) {\n    string = handleFunctionalArg(string);\n    let { instant } = actionOpts;\n    let bookEndQueueItems = this.#generateTemporaryOptionQueueItems(actionOpts);\n    let chars = maybeChunkStringAsHtml(string, this.opts.html);\n    let charsAsQueueItems = chars.map((char) => {\n      return {\n        func: () => this.#type(char),\n        char,\n        delay: instant || isNonVoidElement(char) ? 0 : this.#getPace(),\n        typeable: char.nodeType === Node.TEXT_NODE\n      };\n    });\n    let itemsToQueue = [\n      bookEndQueueItems[0],\n      { func: async () => await this.opts.beforeString(string, this) },\n      ...charsAsQueueItems,\n      { func: async () => await this.opts.afterString(string, this) },\n      bookEndQueueItems[1]\n    ];\n    return this.#queueAndReturn(itemsToQueue, actionOpts);\n  }\n  break(actionOpts = {}) {\n    return this.#queueAndReturn(\n      {\n        func: () => this.#type(createElement(\"BR\")),\n        typeable: true\n      },\n      actionOpts\n    );\n  }\n  move(movementArg, actionOpts = {}) {\n    movementArg = handleFunctionalArg(movementArg);\n    let bookEndQueueItems = this.#generateTemporaryOptionQueueItems(actionOpts);\n    let { instant, to } = actionOpts;\n    let numberOfSteps = countStepsToSelector({\n      queueItems: this.queue.getTypeable(),\n      selector: movementArg === null ? \"\" : movementArg,\n      to,\n      cursorPosition: this.#derivedCursorPosition\n    });\n    let directionalStep = numberOfSteps < 0 ? -1 : 1;\n    this.predictedCursorPosition = this.#derivedCursorPosition + numberOfSteps;\n    return this.#queueAndReturn(\n      [\n        bookEndQueueItems[0],\n        ...duplicate(\n          {\n            func: () => this.#move(directionalStep),\n            delay: instant ? 0 : this.#getPace(),\n            cursorable: true\n          },\n          Math.abs(numberOfSteps)\n        ),\n        bookEndQueueItems[1]\n      ],\n      actionOpts\n    );\n  }\n  exec(func, actionOpts = {}) {\n    let bookEndQueueItems = this.#generateTemporaryOptionQueueItems(actionOpts);\n    return this.#queueAndReturn(\n      [bookEndQueueItems[0], { func: () => func(this) }, bookEndQueueItems[1]],\n      actionOpts\n    );\n  }\n  options(opts, actionOpts = {}) {\n    opts = handleFunctionalArg(opts);\n    this.#updateOptions(opts);\n    return this.#queueAndReturn({}, actionOpts);\n  }\n  pause(milliseconds, actionOpts = {}) {\n    return this.#queueAndReturn(\n      { delay: handleFunctionalArg(milliseconds) },\n      actionOpts\n    );\n  }\n  delete(numCharacters = null, actionOpts = {}) {\n    numCharacters = handleFunctionalArg(numCharacters);\n    let bookEndQueueItems = this.#generateTemporaryOptionQueueItems(actionOpts);\n    let num = numCharacters;\n    let { instant, to } = actionOpts;\n    let typeableQueueItems = this.queue.getTypeable();\n    let rounds = (() => {\n      if (num === null) {\n        return typeableQueueItems.length;\n      }\n      if (isNumber(num)) {\n        return num;\n      }\n      return countStepsToSelector({\n        queueItems: typeableQueueItems,\n        selector: num,\n        cursorPosition: this.#derivedCursorPosition,\n        to\n      });\n    })();\n    return this.#queueAndReturn(\n      [\n        bookEndQueueItems[0],\n        ...duplicate(\n          {\n            func: this.#delete.bind(this),\n            delay: instant ? 0 : this.#getPace(1),\n            deletable: true\n          },\n          rounds\n        ),\n        bookEndQueueItems[1]\n      ],\n      actionOpts\n    );\n  }\n  freeze() {\n    this.statuses.frozen = true;\n  }\n  /**\n   * Like `.go()`, but more... \"off the grid.\"\n   *\n   * - won't trigger `afterComplete` callback\n   * - items won't be replayed after `.reset()`\n   *\n   * When called, all non-done items will be \"flushed\" --\n   * that is, executed, but not remembered.\n   */\n  flush(cb = () => {\n  }) {\n    this.#attachCursor();\n    this.#fire(false).then(cb);\n    return this;\n  }\n  getQueue() {\n    return this.queue;\n  }\n  getOptions() {\n    return this.opts;\n  }\n  updateOptions(options) {\n    return this.#updateOptions(options);\n  }\n  getElement() {\n    return this.element;\n  }\n  empty(actionOpts = {}) {\n    return this.#queueAndReturn({ func: this.#empty.bind(this) }, actionOpts);\n  }\n  async #empty() {\n    if (this.#elementIsInput()) {\n      this.element.value = \"\";\n      return;\n    }\n    this.#allChars.forEach(this.#removeNode.bind(this));\n    return;\n  }\n  /**\n   * Execute items in the queue.\n   *\n   * @param remember If false, each queue item will be destroyed once executed.\n   * @returns\n   */\n  async #fire(remember = true) {\n    this.statuses.started = true;\n    let cleanUp = (qKey) => {\n      this.queue.done(qKey, !remember);\n    };\n    try {\n      let queueItems = [...this.queue.getQueue()];\n      for (let index = 0; index < queueItems.length; index++) {\n        let [queueKey, queueItem] = queueItems[index];\n        if (queueItem.done) continue;\n        if (!queueItem.deletable || queueItem.deletable && this.#allChars.length) {\n          let newIndex = await this.#fireItemWithContext(index, queueItems);\n          cleanUpSkipped({\n            index,\n            newIndex,\n            queueItems,\n            cleanUp\n          });\n          index = newIndex;\n        }\n        cleanUp(queueKey);\n      }\n      if (!remember) {\n        return this;\n      }\n      this.statuses.completed = true;\n      await this.opts.afterComplete(this);\n      if (!this.opts.loop) {\n        throw \"\";\n      }\n      let delay = this.opts.loopDelay;\n      this.#wait(async () => {\n        await this.#prepLoop(delay[0]);\n        this.#fire();\n      }, delay[1]);\n    } catch (e) {\n    }\n    return this;\n  }\n  async #move(step) {\n    this.cursorPosition = updateCursorPosition(\n      step,\n      this.cursorPosition,\n      this.#allChars\n    );\n    repositionCursor(this.element, this.#allChars, this.cursorPosition);\n  }\n  /**\n   * 1. Reset queue.\n   * 2. Reset initial pause.\n   */\n  async #prepLoop(delay) {\n    let derivedCursorPosition = this.#derivedCursorPosition;\n    derivedCursorPosition && await this.#move({ value: derivedCursorPosition });\n    let queueItems = this.#allChars.map((c) => {\n      return [\n        Symbol(),\n        {\n          func: this.#delete.bind(this),\n          delay: this.#getPace(1),\n          deletable: true,\n          shouldPauseCursor: () => true\n        }\n      ];\n    });\n    for (let index = 0; index < queueItems.length; index++) {\n      await this.#fireItemWithContext(index, queueItems);\n    }\n    this.queue.reset();\n    this.queue.set(0, { delay });\n  }\n  #fireItemWithContext(index, queueItems) {\n    return fireItem({\n      index,\n      queueItems,\n      wait: this.#wait.bind(this),\n      cursor: this.cursor,\n      cursorOptions: this.opts.cursor\n    });\n  }\n  async #wait(callback, delay, silent = false) {\n    if (this.statuses.frozen) {\n      await new Promise((resolve) => {\n        this.unfreeze = () => {\n          this.statuses.frozen = false;\n          resolve();\n        };\n      });\n    }\n    silent || await this.opts.beforeStep(this);\n    await wait(callback, delay, this.timeouts);\n    silent || await this.opts.afterStep(this);\n  }\n  /**\n   * Attach it to the DOM so, along with the required CSS transition.\n   */\n  async #attachCursor() {\n    !this.#elementIsInput() && this.cursor && this.element.appendChild(this.cursor);\n    if (this.#shouldRenderCursor) {\n      setCursorStyles(this.id, this.element);\n      this.cursor.dataset.tiAnimationId = this.id;\n      let { animation } = this.opts.cursor;\n      let { frames, options } = animation;\n      setCursorAnimation({\n        frames,\n        cursor: this.cursor,\n        options: {\n          duration: this.opts.cursorSpeed,\n          ...options\n        }\n      });\n    }\n  }\n  #elementIsInput() {\n    return isInput(this.element);\n  }\n  #queueAndReturn(steps, opts) {\n    this.queue.add(steps);\n    this.#maybeAppendPause(opts);\n    return this;\n  }\n  #maybeAppendPause(opts = {}) {\n    let delay = opts.delay;\n    delay && this.queue.add({ delay });\n  }\n  #generateTemporaryOptionQueueItems(newOptions = {}) {\n    return [\n      { func: () => this.#updateOptions(newOptions) },\n      { func: () => this.#updateOptions(this.opts) }\n    ];\n  }\n  async #updateOptions(opts) {\n    this.opts = merge(this.opts, opts);\n  }\n  /**\n   * Based on provided strings, generate a TypeIt queue\n   * to be fired for each character in the string.\n   */\n  #generateQueue() {\n    let strings = this.opts.strings.filter((string) => !!string);\n    strings.forEach((string, index) => {\n      this.type(string);\n      if (index + 1 === strings.length) {\n        return;\n      }\n      let splitItems = this.opts.breakLines ? [{ func: () => this.#type(createElement(\"BR\")), typeable: true }] : duplicate(\n        {\n          func: this.#delete.bind(this),\n          delay: this.#getPace(1)\n        },\n        this.queue.getTypeable().length\n      );\n      this.#addSplitPause(splitItems);\n    });\n  }\n  #buildOptions = (options) => {\n    this.opts.cursor = processCursorOptions(\n      options.cursor ?? DEFAULT_OPTIONS.cursor\n    );\n    this.opts.strings = this.#prependHardcodedStrings(\n      asArray(this.opts.strings)\n    );\n    this.opts = merge(this.opts, {\n      html: !this.#isInput && this.opts.html,\n      nextStringDelay: calculateDelay(this.opts.nextStringDelay),\n      loopDelay: calculateDelay(this.opts.loopDelay)\n    });\n  };\n  #prependHardcodedStrings(strings) {\n    let existingMarkup = this.element.innerHTML;\n    if (!existingMarkup) {\n      return strings;\n    }\n    this.element.innerHTML = \"\";\n    if (this.opts.startDelete) {\n      this.element.innerHTML = existingMarkup;\n      expandTextNodes(this.element);\n      this.#addSplitPause(\n        duplicate(\n          {\n            func: this.#delete.bind(this),\n            delay: this.#getPace(1),\n            deletable: true\n          },\n          this.#allChars.length\n        )\n      );\n      return strings;\n    }\n    return splitOnBreak(existingMarkup).concat(strings);\n  }\n  /**\n   * Provided it's a non-form element and the options is provided,\n   * set up the cursor element for the animation.\n   */\n  #setUpCursor() {\n    if (this.#isInput) {\n      return null;\n    }\n    let cursor = createElement(\"span\");\n    cursor.className = CURSOR_CLASS;\n    if (!this.#shouldRenderCursor) {\n      cursor.style.visibility = \"hidden\";\n      return cursor;\n    }\n    cursor.innerHTML = getParsedBody(this.opts.cursorChar).innerHTML;\n    return cursor;\n  }\n  #addSplitPause(items) {\n    let delay = this.opts.nextStringDelay;\n    this.queue.add([{ delay: delay[0] }, ...items, { delay: delay[1] }]);\n  }\n  #type(char) {\n    insertIntoElement(this.element, char);\n  }\n  #delete() {\n    if (!this.#allChars.length) return;\n    if (this.#isInput) {\n      this.element.value = this.element.value.slice(0, -1);\n    } else {\n      this.#removeNode(this.#allChars[this.cursorPosition]);\n    }\n  }\n  #removeNode(node) {\n    removeNode(node, this.element);\n  }\n  #getPace(index = 0) {\n    return calculatePace(this.opts)[index];\n  }\n  get #derivedCursorPosition() {\n    return this.predictedCursorPosition ?? this.cursorPosition;\n  }\n  get #isInput() {\n    return isInput(this.element);\n  }\n  get #shouldRenderCursor() {\n    return !!this.opts.cursor && !this.#isInput;\n  }\n  get #allChars() {\n    return getAllChars(this.element);\n  }\n}\n\nexport { TypeIt as default };\n","import { Card, Descriptions, Space, Tag } from 'antd';\nimport TypeIt from 'typeit';\nimport type { Options } from 'typeit';\nimport type { El } from 'typeit/dist/types';\nimport pkg from '~/package.json';\n\ninterface PkgVersionInfo {\n  name: string;\n  version: string;\n}\n\ninterface PkgJson {\n  name: string;\n  version: string;\n  dependencies: PkgVersionInfo[];\n  devDependencies: PkgVersionInfo[];\n}\n\nconst latestBuildTime = BUILD_TIME;\n\nconst { name, version, dependencies, devDependencies } = pkg;\n\nfunction transformVersionData(tuple: [string, string]): PkgVersionInfo {\n  const [$name, $version] = tuple;\n  return {\n    name: $name,\n    version: $version\n  };\n}\n\nconst pkgJson: PkgJson = {\n  name,\n  version,\n  dependencies: Object.entries(dependencies).map(transformVersionData),\n  devDependencies: Object.entries(devDependencies).map(transformVersionData)\n};\n\nexport function Component() {\n  const { t } = useTranslation();\n\n  const textRef = useRef<El>(null);\n\n  function init() {\n    if (!textRef.current) return;\n\n    const options: Options = {\n      strings: t('page.about.introduction'),\n      lifeLike: true,\n      speed: 10\n    };\n\n    const initTypeIt = new TypeIt(textRef.current, options);\n\n    initTypeIt.go();\n  }\n\n  useMount(() => {\n    init();\n  });\n\n  return (\n    <Space\n      direction=\"vertical\"\n      className=\"w-full\"\n      size={16}\n    >\n      <Card\n        title={t('page.about.title')}\n        bordered={false}\n        size=\"small\"\n        className=\"card-wrapper\"\n      >\n        <span ref={textRef} />\n      </Card>\n\n      <Card\n        title={t('page.about.projectInfo.title')}\n        bordered={false}\n        size=\"small\"\n        className=\"card-wrapper\"\n      >\n        <Descriptions\n          bordered\n          size=\"small\"\n          column={{ xs: 1, sm: 2, xxl: 2, xl: 2, lg: 2, md: 2 }}\n        >\n          <Descriptions.Item label={t('page.about.projectInfo.version')}>\n            <Tag color=\"blue\">{pkgJson.version}</Tag>\n          </Descriptions.Item>\n          <Descriptions.Item label={t('page.about.projectInfo.latestBuildTime')}>\n            <Tag color=\"blue\">{latestBuildTime}</Tag>\n          </Descriptions.Item>\n          <Descriptions.Item label={t('page.about.projectInfo.githubLink')}>\n            <a\n              className=\"text-primary\"\n              href={pkg.homepage}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {t('page.about.projectInfo.githubLink')}\n            </a>\n          </Descriptions.Item>\n          <Descriptions.Item label={t('page.about.projectInfo.previewLink')}>\n            <a\n              className=\"text-primary\"\n              href={pkg.website}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {t('page.about.projectInfo.previewLink')}\n            </a>\n          </Descriptions.Item>\n        </Descriptions>\n      </Card>\n\n      <Card\n        title={t('page.about.prdDep')}\n        bordered={false}\n        size=\"small\"\n        className=\"card-wrapper\"\n      >\n        <Descriptions\n          bordered\n          size=\"small\"\n          column={{ xs: 1, sm: 2, xxl: 2, xl: 2, lg: 2, md: 2 }}\n        >\n          {pkgJson.dependencies.map(item => (\n            <Descriptions.Item\n              key={item.name}\n              label={item.name}\n            >\n              {item.version}\n            </Descriptions.Item>\n          ))}\n        </Descriptions>\n      </Card>\n\n      <Card\n        title={t('page.about.devDep')}\n        bordered={false}\n        size=\"small\"\n        className=\"card-wrapper\"\n      >\n        <Descriptions\n          bordered\n          size=\"small\"\n          column={{ xs: 1, sm: 2, xxl: 2, xl: 2, lg: 2, md: 2 }}\n        >\n          {pkgJson.devDependencies.map(item => (\n            <Descriptions.Item\n              key={item.name}\n              label={item.name}\n            >\n              {item.version}\n            </Descriptions.Item>\n          ))}\n        </Descriptions>\n      </Card>\n    </Space>\n  );\n}\n"],"names":["isArray","thing","asArray","value","Queue","initialItems","add","steps","step","_q","_a","buildQueueItem","getTypeable","rawValues","set","index","item","keys","queueItem","reset","wipe","getQueue","destroy","key","getItems","all","i","done","shouldDestroy","DATA_ATTRIBUTE","CURSOR_CLASS","END","DEFAULT_STATUSES","DEFAULT_OPTIONS","n","PLACEHOLDER_CSS","createElement","el","createTextNode","content","appendStyleBlock","styles","id","styleBlock","calculateDelay","delayArg","randomInRange","range","val","calculatePace","options","speed","deleteSpeed","lifeLike","toArray","expandTextNodes","element","child","c","getParsedBody","doc","walkElementNodes","shouldReverse","shouldIncludeCursor","cursor","walker","node","_b","nextNode","nodes","chunkStringAsHtml","string","maybeChunkStringAsHtml","str","asHtml","cleanUpSkipped","newIndex","queueItems","cleanUp","isNumber","countStepsToSelector","selector","cursorPosition","to","isMovingToEnd","selectorIndex","char","parentElement","parentMatches","offset","destroyTimeouts","timeouts","duplicate","times","beforePaint","cb","resolve","getAnimationFromElement","animation","setCursorAnimation","frames","rebuildCursorAnimation","cursorOptions","oldCurrentTime","newAnimation","execute","fireItem","wait","instantQueue","tempIndex","futureItem","shouldBeGrouped","shouldPauseCursor","q","fireWhenVisible","func","entries","observer2","entry","generateHash","isInput","getAllChars","handleFunctionalArg","arg","select","isBodyElement","insertIntoElement","originalTarget","character","target","isNonVoidElement","merge","originalObj","newObj","processCursorOptions","newOptions","defaultFrames","defaultOptions","removeNode","rootElement","nodeParent","repositionCursor","allChars","newCursorPosition","nodeToInsertBefore","selectorToElement","cursorFontStyles","setCursorStyles","cursorSelector","computedStyles","customProperties","accumulator","splitOnBreak","updateCursorPosition","printedCharacters","callback","delay","TypeIt","__privateAdd","_TypeIt_instances","__publicField","_buildOptions","__privateMethod","prependHardcodedStrings_fn","__privateGet","isInput_get","setUpCursor_fn","generateQueue_fn","attachCursor_fn","fire_fn","shouldRemoveCursor","removeNode_fn","rebuild","property","elementIsInput_fn","actionOpts","instant","bookEndQueueItems","generateTemporaryOptionQueueItems_fn","charsAsQueueItems","type_fn","getPace_fn","itemsToQueue","queueAndReturn_fn","movementArg","numberOfSteps","derivedCursorPosition_get","directionalStep","move_fn","opts","updateOptions_fn","milliseconds","numCharacters","num","typeableQueueItems","rounds","delete_fn","empty_fn","allChars_get","remember","qKey","queueKey","fireItemWithContext_fn","wait_fn","prepLoop_fn","derivedCursorPosition","silent","shouldRenderCursor_get","maybeAppendPause_fn","strings","splitItems","addSplitPause_fn","existingMarkup","items","latestBuildTime","name","version","dependencies","devDependencies","pkg","transformVersionData","tuple","$name","$version","pkgJson","Component","useTranslation","textRef","useRef","init","useMount","jsxs","Space","jsx","Card","Descriptions","Tag"],"mappings":"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","x_google_ignoreList":[0]}