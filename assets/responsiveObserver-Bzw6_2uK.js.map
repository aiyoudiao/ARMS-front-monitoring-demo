{"version":3,"file":"responsiveObserver-Bzw6_2uK.js","sources":["../../node_modules/.pnpm/antd@5.21.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/antd/es/_util/responsiveObserver.js"],"sourcesContent":["import React from 'react';\nimport { useToken } from '../theme/internal';\nexport const responsiveArray = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nconst getResponsiveMap = token => ({\n  xs: `(max-width: ${token.screenXSMax}px)`,\n  sm: `(min-width: ${token.screenSM}px)`,\n  md: `(min-width: ${token.screenMD}px)`,\n  lg: `(min-width: ${token.screenLG}px)`,\n  xl: `(min-width: ${token.screenXL}px)`,\n  xxl: `(min-width: ${token.screenXXL}px)`\n});\n/**\n * Ensures that the breakpoints token are valid, in good order\n * For each breakpoint : screenMin <= screen <= screenMax and screenMax <= nextScreenMin\n */\nconst validateBreakpoints = token => {\n  const indexableToken = token;\n  const revBreakpoints = [].concat(responsiveArray).reverse();\n  revBreakpoints.forEach((breakpoint, i) => {\n    const breakpointUpper = breakpoint.toUpperCase();\n    const screenMin = `screen${breakpointUpper}Min`;\n    const screen = `screen${breakpointUpper}`;\n    if (!(indexableToken[screenMin] <= indexableToken[screen])) {\n      throw new Error(`${screenMin}<=${screen} fails : !(${indexableToken[screenMin]}<=${indexableToken[screen]})`);\n    }\n    if (i < revBreakpoints.length - 1) {\n      const screenMax = `screen${breakpointUpper}Max`;\n      if (!(indexableToken[screen] <= indexableToken[screenMax])) {\n        throw new Error(`${screen}<=${screenMax} fails : !(${indexableToken[screen]}<=${indexableToken[screenMax]})`);\n      }\n      const nextBreakpointUpperMin = revBreakpoints[i + 1].toUpperCase();\n      const nextScreenMin = `screen${nextBreakpointUpperMin}Min`;\n      if (!(indexableToken[screenMax] <= indexableToken[nextScreenMin])) {\n        throw new Error(`${screenMax}<=${nextScreenMin} fails : !(${indexableToken[screenMax]}<=${indexableToken[nextScreenMin]})`);\n      }\n    }\n  });\n  return token;\n};\nexport default function useResponsiveObserver() {\n  const [, token] = useToken();\n  const responsiveMap = getResponsiveMap(validateBreakpoints(token));\n  // To avoid repeat create instance, we add `useMemo` here.\n  return React.useMemo(() => {\n    const subscribers = new Map();\n    let subUid = -1;\n    let screens = {};\n    return {\n      matchHandlers: {},\n      dispatch(pointMap) {\n        screens = pointMap;\n        subscribers.forEach(func => func(screens));\n        return subscribers.size >= 1;\n      },\n      subscribe(func) {\n        if (!subscribers.size) this.register();\n        subUid += 1;\n        subscribers.set(subUid, func);\n        func(screens);\n        return subUid;\n      },\n      unsubscribe(paramToken) {\n        subscribers.delete(paramToken);\n        if (!subscribers.size) this.unregister();\n      },\n      unregister() {\n        Object.keys(responsiveMap).forEach(screen => {\n          const matchMediaQuery = responsiveMap[screen];\n          const handler = this.matchHandlers[matchMediaQuery];\n          handler === null || handler === void 0 ? void 0 : handler.mql.removeListener(handler === null || handler === void 0 ? void 0 : handler.listener);\n        });\n        subscribers.clear();\n      },\n      register() {\n        Object.keys(responsiveMap).forEach(screen => {\n          const matchMediaQuery = responsiveMap[screen];\n          const listener = _ref => {\n            let {\n              matches\n            } = _ref;\n            this.dispatch(Object.assign(Object.assign({}, screens), {\n              [screen]: matches\n            }));\n          };\n          const mql = window.matchMedia(matchMediaQuery);\n          mql.addListener(listener);\n          this.matchHandlers[matchMediaQuery] = {\n            mql,\n            listener\n          };\n          listener(mql);\n        });\n      },\n      responsiveMap\n    };\n  }, [token]);\n}\nexport const matchScreen = (screens, screenSizes) => {\n  if (screenSizes && typeof screenSizes === 'object') {\n    for (let i = 0; i < responsiveArray.length; i++) {\n      const breakpoint = responsiveArray[i];\n      if (screens[breakpoint] && screenSizes[breakpoint] !== undefined) {\n        return screenSizes[breakpoint];\n      }\n    }\n  }\n};"],"names":["responsiveArray","getResponsiveMap","token","validateBreakpoints","indexableToken","revBreakpoints","breakpoint","i","breakpointUpper","screenMin","screen","screenMax","nextScreenMin","useResponsiveObserver","useToken","responsiveMap","React","subscribers","subUid","screens","pointMap","func","paramToken","matchMediaQuery","handler","listener","_ref","matches","mql","matchScreen","screenSizes"],"mappings":"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","x_google_ignoreList":[0]}