{"version":3,"file":"routerPush-cLO4gpQ_.js","sources":["../../src/hooks/common/routerPush.ts"],"sourcesContent":["import { useRoute, useRouter } from '@sa/simple-router';\nimport type { RouteKey } from '@elegant-router/types';\nimport type { RouteLocationNamedRaw } from '@sa/simple-router';\n\ninterface RouterPushOptions {\n  query?: Record<string, string>;\n  params?: Record<string, string>;\n}\n\n/**\n * Router push\n *\n * Jump to the specified route, it can replace function router.push\n */\nexport function useRouterPush() {\n  const router = useRouter();\n\n  const route = useRoute();\n\n  const [searchParams] = useSearchParams();\n\n  const routerPush = router.push;\n\n  const routerBack = router.back;\n\n  async function routerPushByKey(key: RouteKey, options?: RouterPushOptions) {\n    const { query, params } = options || {};\n\n    const routeLocation: RouteLocationNamedRaw = {\n      name: key\n    };\n\n    if (Object.keys(query || {}).length) {\n      routeLocation.query = query;\n    }\n\n    if (Object.keys(params || {}).length) {\n      routeLocation.params = params;\n    }\n\n    return routerPush(routeLocation);\n  }\n\n  /**\n   * Get route query of meta by key\n   *\n   * @param key\n   */\n  const getRouteQueryOfMetaByKey = (key: string) => {\n    const meta = router.getRouteMetaByKey(key);\n\n    const query: Record<string, any> = {};\n\n    meta?.query?.forEach((item: { key: string | number; value: any }) => {\n      query[item.key] = item.value;\n    });\n\n    return query;\n  };\n\n  function routerPushByKeyWithMetaQuery(key: string) {\n    const query = getRouteQueryOfMetaByKey(key);\n\n    return routerPushByKey(key as RouteKey, { query });\n  }\n\n  async function toHome() {\n    return routerPush('/');\n  }\n\n  /**\n   * Navigate to login page\n   *\n   * @param loginModule The login module\n   * @param redirectUrl The redirect url, if not specified, it will be the current route fullPath\n   */\n  async function toLogin(loginModule?: UnionKey.LoginModule, redirectUrl?: string) {\n    const module = loginModule || 'pwd-login';\n\n    const options: RouterPushOptions = {};\n\n    const redirect = redirectUrl || route.fullPath;\n\n    options.query = {\n      redirect\n    };\n\n    return routerPushByKey(`login_${module}`, options);\n  }\n\n  /**\n   * Toggle login module\n   *\n   * @param module\n   */\n  async function toggleLoginModule(module: UnionKey.LoginModule) {\n    const query = route.query as Record<string, string>;\n\n    return routerPushByKey(`login_${module}`, { query });\n  }\n\n  /**\n   * Redirect from login\n   *\n   * @param [needRedirect=true] Whether to redirect after login. Default is `true`\n   */\n  async function redirectFromLogin(needRedirect = true) {\n    const redirect = searchParams.get('redirect');\n\n    if (needRedirect && redirect) {\n      routerPush(redirect);\n    } else {\n      toHome();\n    }\n  }\n\n  return {\n    routerPush,\n    routerBack,\n    routerPushByKey,\n    toLogin,\n    routerPushByKeyWithMetaQuery,\n    redirectFromLogin,\n    toggleLoginModule\n  };\n}\n"],"names":["useRouterPush","router","useRouter","route","useRoute","searchParams","useSearchParams","routerPush","routerBack","routerPushByKey","key","options","query","params","routeLocation","getRouteQueryOfMetaByKey","meta","_a","item","routerPushByKeyWithMetaQuery","toHome","toLogin","loginModule","redirectUrl","module","redirect","toggleLoginModule","redirectFromLogin","needRedirect"],"mappings":"wDAcO,SAASA,GAAgB,CAC9B,MAAMC,EAASC,IAETC,EAAQC,IAER,CAACC,CAAY,EAAIC,IAEjBC,EAAaN,EAAO,KAEpBO,EAAaP,EAAO,KAEX,eAAAQ,EAAgBC,EAAeC,EAA6B,CACzE,KAAM,CAAE,MAAAC,EAAO,OAAAC,GAAWF,GAAW,CAAA,EAE/BG,EAAuC,CAC3C,KAAMJ,CAAA,EAGR,OAAI,OAAO,KAAKE,GAAS,CAAE,CAAA,EAAE,SAC3BE,EAAc,MAAQF,GAGpB,OAAO,KAAKC,GAAU,CAAE,CAAA,EAAE,SAC5BC,EAAc,OAASD,GAGlBN,EAAWO,CAAa,CACjC,CAOM,MAAAC,EAA4BL,GAAgB,OAC1C,MAAAM,EAAOf,EAAO,kBAAkBS,CAAG,EAEnCE,EAA6B,CAAA,EAE7B,OAAAK,EAAAD,GAAA,YAAAA,EAAA,QAAA,MAAAC,EAAO,QAASC,GAA+C,CAC7DN,EAAAM,EAAK,GAAG,EAAIA,EAAK,KAAA,GAGlBN,CAAA,EAGT,SAASO,EAA6BT,EAAa,CAC3C,MAAAE,EAAQG,EAAyBL,CAAG,EAE1C,OAAOD,EAAgBC,EAAiB,CAAE,MAAAE,CAAO,CAAA,CACnD,CAEA,eAAeQ,GAAS,CACtB,OAAOb,EAAW,GAAG,CACvB,CAQe,eAAAc,EAAQC,EAAoCC,EAAsB,CAC/E,MAAMC,EAASF,GAAe,YAExBX,EAA6B,CAAA,EAE7Bc,EAAWF,GAAepB,EAAM,SAEtC,OAAAQ,EAAQ,MAAQ,CACd,SAAAc,CAAA,EAGKhB,EAAgB,SAASe,CAAM,GAAIb,CAAO,CACnD,CAOA,eAAee,EAAkBF,EAA8B,CAC7D,MAAMZ,EAAQT,EAAM,MAEpB,OAAOM,EAAgB,SAASe,CAAM,GAAI,CAAE,MAAAZ,EAAO,CACrD,CAOe,eAAAe,EAAkBC,EAAe,GAAM,CAC9C,MAAAH,EAAWpB,EAAa,IAAI,UAAU,EAExCuB,GAAgBH,EAClBlB,EAAWkB,CAAQ,EAEZL,GAEX,CAEO,MAAA,CACL,WAAAb,EACA,WAAAC,EACA,gBAAAC,EACA,QAAAY,EACA,6BAAAF,EACA,kBAAAQ,EACA,kBAAAD,CAAA,CAEJ"}