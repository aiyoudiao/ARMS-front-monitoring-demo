{"version":3,"file":"useBreakpoint-DacCSAqK.js","sources":["../../node_modules/.pnpm/antd@5.21.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/antd/es/_util/hooks/useForceUpdate.js","../../node_modules/.pnpm/antd@5.21.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/antd/es/grid/hooks/useBreakpoint.js"],"sourcesContent":["import * as React from 'react';\nexport default function useForceUpdate() {\n  const [, forceUpdate] = React.useReducer(x => x + 1, 0);\n  return forceUpdate;\n}","\"use client\";\n\nimport { useRef } from 'react';\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport useForceUpdate from '../../_util/hooks/useForceUpdate';\nimport useResponsiveObserver from '../../_util/responsiveObserver';\nfunction useBreakpoint() {\n  let refreshOnChange = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  const screensRef = useRef({});\n  const forceUpdate = useForceUpdate();\n  const responsiveObserver = useResponsiveObserver();\n  useLayoutEffect(() => {\n    const token = responsiveObserver.subscribe(supportScreens => {\n      screensRef.current = supportScreens;\n      if (refreshOnChange) {\n        forceUpdate();\n      }\n    });\n    return () => responsiveObserver.unsubscribe(token);\n  }, []);\n  return screensRef.current;\n}\nexport default useBreakpoint;"],"names":["useForceUpdate","forceUpdate","React.useReducer","x","useBreakpoint","refreshOnChange","screensRef","useRef","responsiveObserver","useResponsiveObserver","useLayoutEffect","token","supportScreens"],"mappings":"qGACe,SAASA,GAAiB,CACvC,KAAM,CAAA,CAAGC,CAAW,EAAIC,EAAgB,WAACC,GAAKA,EAAI,EAAG,CAAC,EACtD,OAAOF,CACT,CCEA,SAASG,GAAgB,CACvB,IAAIC,EAAkB,UAAU,OAAS,GAAK,UAAU,CAAC,IAAM,OAAY,UAAU,CAAC,EAAI,GAC1F,MAAMC,EAAaC,SAAO,CAAA,CAAE,EACtBN,EAAcD,IACdQ,EAAqBC,IAC3B,OAAAC,EAAgB,IAAM,CACpB,MAAMC,EAAQH,EAAmB,UAAUI,GAAkB,CAC3DN,EAAW,QAAUM,EACjBP,GACFJ,GAER,CAAK,EACD,MAAO,IAAMO,EAAmB,YAAYG,CAAK,CAClD,EAAE,CAAE,CAAA,EACEL,EAAW,OACpB","x_google_ignoreList":[0,1]}